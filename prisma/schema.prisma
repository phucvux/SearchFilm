// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  playlists Playlist[]
  comments Comment[]
  ratings Rating[]
}

model Movie {
  id        Int     @id @default(autoincrement())
  title     String
  comments Comment[]
  ratings  Rating[]
  playlists MovieToPlaylist[]
}

model Comment {
  id        Int     @id @default(autoincrement())
  content  String
  movieId  Int
  movie    Movie   @relation(fields: [movieId], references: [id])
  user     User    @relation(fields: [userId], references: [id]) 
  userId    Int
}

model Rating {
  id        Int     @id @default(autoincrement())
  value     Int
  movieId  Int
  movie    Movie   @relation(fields: [movieId], references: [id])
  user     User    @relation(fields: [userId], references: [id]) 
  userId    Int

  @@unique([movieId, userId])
}

model Playlist {
  id        Int     @id @default(autoincrement())
  name      String
  user     User    @relation(fields: [userId], references: [id])
  userId    Int
  movies   MovieToPlaylist[]
}

model MovieToPlaylist {
  movieId  Int
  playlistId Int

  movie    Movie   @relation(fields: [movieId], references: [id])
  playlist Playlist @relation(fields: [playlistId], references: [id])

  @@id([movieId, playlistId])
  @@unique([movieId, playlistId])
}
